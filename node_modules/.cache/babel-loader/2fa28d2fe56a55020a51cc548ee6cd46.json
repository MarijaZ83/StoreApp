{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Store App (React)\\\\src\\\\store-context\\\\StoreGlobalContextState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport StoreContext from \"./storeContext\";\nimport { paginateArray } from \"../utils/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreGlobalState = props => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [filteredName, setFilterName] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const fetchProducts = async () => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n    const result = await response.json();\n    console.log(result);\n    setProducts(result);\n  };\n\n  useEffect(() => {\n    console.log(\"Component did mount\");\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    console.log(\"New product is pushed to the cart list \");\n  }, [cart]);\n\n  const addToCart = product => {\n    setCart([...cart, product]);\n  };\n\n  const handleRemoveFromCart = id => {\n    const filteredArray = cart.filter(product => product.id !== id);\n    setCart(filteredArray);\n  };\n\n  const handleFilterName = e => {\n    const value = e.target.value;\n    setFilterName(value.trim().toLowerCase());\n  };\n\n  const handlePageNumber = increment => {\n    increment ? setPageNumber(pageNumber + 1) : setPageNumber(pageNumber - 1);\n  };\n\n  const handleRemoveProduct = id => {\n    const filteredArray = products.filter(product => product.id !== id);\n    setProducts(filteredArray);\n  };\n\n  const filteredProducts = () => {\n    return paginateArray(products.filter(product => product.title.trim().toLowerCase().includes(filteredName)), 4, pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      products: products,\n      filteredName: filteredName,\n      pageNumber: pageNumber,\n      cart: cart,\n      addToCart: addToCart,\n      handleFilterName: handleFilterName,\n      handlePageNumber: handlePageNumber,\n      handleRemoveProduct: handleRemoveProduct,\n      setProducts: setProducts,\n      filteredProducts: filteredProducts,\n      handleRemoveFromCart: handleRemoveFromCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreGlobalState, \"2pLdSF3RXBNT67+fUagc34W7GbM=\");\n\n_c = StoreGlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGlobalState\");","map":{"version":3,"sources":["E:/Projects/Store App (React)/src/store-context/StoreGlobalContextState.jsx"],"names":["React","useState","useEffect","StoreContext","paginateArray","StoreGlobalState","props","products","setProducts","cart","setCart","filteredName","setFilterName","pageNumber","setPageNumber","fetchProducts","response","fetch","result","json","console","log","addToCart","product","handleRemoveFromCart","id","filteredArray","filter","handleFilterName","e","value","target","trim","toLowerCase","handlePageNumber","increment","handleRemoveProduct","filteredProducts","title","includes","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StoreContext from \"./storeContext\";\nimport { paginateArray } from \"../utils/pagination\";\n\nexport const StoreGlobalState = (props) => {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [filteredName, setFilterName] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const fetchProducts = async () => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n    const result = await response.json();\n\n    console.log(result);\n    setProducts(result);\n  };\n\n  useEffect(() => {\n    console.log(\"Component did mount\");\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"New product is pushed to the cart list \");\n  }, [cart]);\n\n  const addToCart = (product) => {\n    setCart([...cart, product]);\n  };\n\n  const handleRemoveFromCart = (id) => {\n    const filteredArray = cart.filter((product) => product.id !== id);\n    setCart(filteredArray);\n  };\n\n  const handleFilterName = (e) => {\n    const value = e.target.value;\n    setFilterName(value.trim().toLowerCase());\n  };\n\n  const handlePageNumber = (increment) => {\n    increment ? setPageNumber(pageNumber + 1) : setPageNumber(pageNumber - 1);\n  };\n\n  const handleRemoveProduct = (id) => {\n    const filteredArray = products.filter((product) => product.id !== id);\n    setProducts(filteredArray);\n  };\n\n  const filteredProducts = () => {\n    return paginateArray(\n      products.filter((product) =>\n        product.title.trim().toLowerCase().includes(filteredName)\n      ),\n      4,\n      pageNumber\n    );\n  };\n  return (\n    <StoreContext.Provider\n      value={{\n        products: products,\n        filteredName: filteredName,\n        pageNumber: pageNumber,\n        cart: cart,\n        addToCart: addToCart,\n        handleFilterName: handleFilterName,\n        handlePageNumber: handlePageNumber,\n        handleRemoveProduct: handleRemoveProduct,\n        setProducts: setProducts,\n        filteredProducts: filteredProducts,\n        handleRemoveFromCart: handleRemoveFromCart,\n      }}\n    >\n      {props.children}\n    </StoreContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}